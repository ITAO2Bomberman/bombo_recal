/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Oberstufenprojekt;

import java.awt.event.KeyEvent;
import java.awt.event.KeyListener;

/**
 *
 * @author MichaL
 */
public class Oberfläche extends javax.swing.JFrame implements KeyListener{
    
    Variablen v = new Variablen();
    Kollision k = new Kollision();
    
    public Oberfläche() {
        this.addKeyListener(this);
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        figur1 = new Oberstufenprojekt.Figur();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setMaximumSize(new java.awt.Dimension(850, 480));

        javax.swing.GroupLayout figur1Layout = new javax.swing.GroupLayout(figur1);
        figur1.setLayout(figur1Layout);
        figur1Layout.setHorizontalGroup(
            figur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 808, Short.MAX_VALUE)
        );
        figur1Layout.setVerticalGroup(
            figur1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 542, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(figur1, javax.swing.GroupLayout.PREFERRED_SIZE, 808, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 6, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(figur1, javax.swing.GroupLayout.DEFAULT_SIZE, 542, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Oberfläche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Oberfläche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Oberfläche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Oberfläche.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Oberfläche().setVisible(true);
            }
        });
    }
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private Oberstufenprojekt.Figur figur1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void keyTyped(KeyEvent e) {
        throw new UnsupportedOperationException("Not supported yet."); //To change body of generated methods, choose Tools | Templates.
    }

    @Override
    public void keyPressed(KeyEvent e) {
        
        
        if (e.getKeyCode() == KeyEvent.VK_UP) {
            if(k.Kollisionsberechnung(v.getX_player1(), v.getY_player1()-16, v.getHindernisse())== false){
            
            v.setY_player1(v.getY_player1() - 16);
            }
        }
        if (e.getKeyCode() == KeyEvent.VK_DOWN) {
            if(k.Kollisionsberechnung(v.getX_player1(), v.getY_player1()+16, v.getHindernisse())== false){
            
            v.setY_player1(v.getY_player1() + 16);
        
        }
        }
        
        if (e.getKeyCode() == KeyEvent.VK_LEFT) {
        if(k.Kollisionsberechnung(v.getX_player1()-16, v.getY_player1(), v.getHindernisse())== false){
            v.setX_player1(v.getX_player1() - 16);
        } 
        }
        if (e.getKeyCode() == KeyEvent.VK_RIGHT) {
             if(k.Kollisionsberechnung(v.getX_player1()+16, v.getY_player1(), v.getHindernisse())== false){
            v.setX_player1(v.getX_player1() + 16);
        } 
        }
        figur1.setv(v);
        repaint();
        }
    

    @Override
    public void keyReleased(KeyEvent e) {
        
    }
          
}
